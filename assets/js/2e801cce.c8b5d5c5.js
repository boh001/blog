"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[636],{1422:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"how-to-get-changesets-to-use-turborepo-in-monorepo","metadata":{"permalink":"/how-to-get-changesets-to-use-turborepo-in-monorepo","source":"@site/blog/2024-04-05.md","title":"How to get changesets to use turborepo in monorepo","description":"let you know how to get changesets to use turborepo in monorepo","date":"2024-04-05T00:00:00.000Z","formattedDate":"April 5, 2024","tags":[{"label":"turborepo","permalink":"/tags/turborepo"},{"label":"monorepo","permalink":"/tags/monorepo"},{"label":"pnpm","permalink":"/tags/pnpm"}],"readingTime":2.35,"hasTruncateMarker":true,"authors":[{"name":"Sanghyeon Kim","title":"Software Engineer","url":"https://github.com/boh001","imageURL":"https://github.com/boh001.png","key":"sanghyeon"}],"frontMatter":{"slug":"how-to-get-changesets-to-use-turborepo-in-monorepo","authors":"sanghyeon","title":"How to get changesets to use turborepo in monorepo","description":"let you know how to get changesets to use turborepo in monorepo","tags":["turborepo","monorepo","pnpm"],"image":"img/turborepo.jpeg"},"unlisted":false,"nextItem":{"title":"How to fix error \\"Prettier resolveConfig.sync is not a function\\"","permalink":"/how-to-fix-error-prettier-resolveConfig-sync"}},"content":"![Turborepo](../static/img/turborepo.jpeg)\\n\\n## TL;DR\\n\\nTo get changesets in monorepo, use `turbo filter` command.\\n\\n\x3c!--truncate--\x3e\\n\\n## Intro\\n\\nwhen i started to use turborepo in monorepo, i needed to get changesets to build workspaces in CI/CD pipeline, otherwise it would take too long.\\n\\n:::info\\ndevelopment environment is below.\\n\\n- pnpm: 8.13.1\\n- turbo: 1.10.13\\n\\n```\\n// project structure\\n// app1 rely on package1\\n\\nexample\\n\u251c\u2500\u2500 apps\\n\u2502   \u251c\u2500\u2500 app1\\n\u251c\u2500\u2500 packages\\n\u2502   \u251c\u2500\u2500 package1\\n\u251c\u2500\u2500 turbo.json\\n\u251c\u2500\u2500 package.json\\n```\\n\\n:::\\n\\n## What changesets do we need?\\n\\nIf app1 are changed, we need to build only app1.\\nBut if package1 are changed, we need to build packag1 and app1 because app1 rely on package1.\\nSo we need to get changesets to build the changed workspaces, as well as workspaces that depent on them.\\n\\n## What should we do?\\n\\ni wrote a script to get changesets before use turborepo, but luckily turborepo has a option to get changesets what we need.\\nWe just use `--filter` option.\\n\\n## How to use `--filter` option\\n\\nIn the documentation, there are many sections to use `--filter` option, but we need to only from this section: [Filter by changed workspaces](https://turbo.build/repo/docs/core-concepts/monorepos/filtering#filter-by-changed-workspaces)\\n`--filter` allows me to run build on any workspaces which have changed since a certain commit or between two commits.\\n\\n```bash\\n# Test everything get changesets from last commit\\nnpx turbo run test --filter=[HEAD^1]\\n# Test everything get changesets between \'main\' and \'my-feature\'\\nnpx turbo run test --filter=[main..my-feature]\\n```\\n\\nbut this comand only know changesets that have changed not dependant workspaces.\\nTo get dependant workspaces that have changed, we need to use `...` syntax.\\n\\n```bash\\n# Build everything that depends on changes in branch \'my-feature\'\\nnpx turbo run build --filter=...[origin/my-feature]\\n```\\n\\n## What task should we run?\\n\\nwe know how to know changesets what we need, but what task should we run?\\nShould we run task like build or test to get changesets? We think it\'s not wasteful.\\nWhenever we run build or test, it takes a long time.\\n\\nWhen run task, turborepo find task in each package.json if it does not exists, it will be ignored.\\nUsing this trick, we can know changesets what we need fast.\\n\\n```json\\n{\\n  \\"$schema\\": \\"https://turbo.build/schema.json\\",\\n  \\"pipeline\\": {\\n      \\"changesets\\":{}\\n    },\\n  }\\n}\\n\\n```\\n\\n## How to get changesets\\n\\n`npx turbo run changesets` command will work based on the changeset, but we don\'t actually know what the changeset is.\\nTo get changesets, we need to add `--dry-run=json` option.\\nWith `--dry-run=json` option, we can get json format in stdout.\\nstdout will be like below.\\n\\n```json\\n{\\n  \\"id\\": \\"2egINTO3mpado71GD7K8g5h01Jr\\",\\n  \\"version\\": \\"1\\",\\n  \\"turboVersion\\": \\"1.10.13\\",\\n  \\"monorepo\\": true,\\n  \\"globalCacheInputs\\": {\\n  },\\n  \\"packages\\": [\\n    \\"app1\\"\\n    \\"package1\\"\\n  ],\\n}\\n```\\n\\n## Solution\\n\\n`npx turbo run changesets --filter=...[commit...commit] --dry-run=json` command will give us changesets what we need.\\nIf you need a only changesets as list or object type, you can use jq command."},{"id":"how-to-fix-error-prettier-resolveConfig-sync","metadata":{"permalink":"/how-to-fix-error-prettier-resolveConfig-sync","source":"@site/blog/2024-03-28.md","title":"How to fix error \\"Prettier resolveConfig.sync is not a function\\"","description":"How to fix error \\"Prettier resolveConfig.sync is not a function\\"","date":"2024-03-28T00:00:00.000Z","formattedDate":"March 28, 2024","tags":[{"label":"eslint","permalink":"/tags/eslint"},{"label":"prettier","permalink":"/tags/prettier"},{"label":"react-native","permalink":"/tags/react-native"},{"label":"pnpm","permalink":"/tags/pnpm"}],"readingTime":1.38,"hasTruncateMarker":true,"authors":[{"name":"Sanghyeon Kim","title":"Software Engineer","url":"https://github.com/boh001","imageURL":"https://github.com/boh001.png","key":"sanghyeon"}],"frontMatter":{"slug":"how-to-fix-error-prettier-resolveConfig-sync","authors":"sanghyeon","title":"How to fix error \\"Prettier resolveConfig.sync is not a function\\"","description":"How to fix error \\"Prettier resolveConfig.sync is not a function\\"","tags":["eslint","prettier","react-native","pnpm"],"image":"img/eslint-prettier.jpeg"},"unlisted":false,"prevItem":{"title":"How to get changesets to use turborepo in monorepo","permalink":"/how-to-get-changesets-to-use-turborepo-in-monorepo"},"nextItem":{"title":"First Blog Post","permalink":"/first-blog-post"}},"content":"![Prettier resolveConfig.sync is not a function](../static/img/eslint-prettier.jpeg)\\n\\n## TL;DR\\n\\nTo Fix error \\"Prettier resolveConfig.sync is not a function\\", use `overrides` field in package.json\\n\\n\x3c!--truncate--\x3e\\n\\n## Intro\\n\\nFor each js project, i have been using my own eslint and prettier packages published at npm.\\nBut when i started to use react-native, i got error \\"Prettier resolveConfig.sync is not a function\\".\\n\\n:::info\\ndevelopment environment is below.\\n\\n- pnpm: 8.13.1\\n- react-native: 0.73.2\\n- prettier: 3.0.3\\n\\n:::\\n\\n\\n## What is a problem?\\n\\nWhen you init your react-native project using `npx react-native init project`, react-native install `@react-native/eslint-config` and `@react-native/eslint-config` use `eslint-plugin-prettier: ^4.2.1`.\\nBut it\'s not compatible with `prettier: 3.0.3` that require `eslint-plugin-prettier` version 5 or later.\\n\\n## How can i fix it?\\n\\nThere are two solutions we can choose.\\n\\n1. Downgrade prettier to 2.x\\n2. force eslint-plugin-prettier to use 5.x using `overrides` field in package.json\\n\\nFirst one is easy to do, but i don\'t want to downgrade prettier even though there is compatible version.\\nSo i choose the second one.\\n\\n## What is overrides field in package.json?\\n\\n:::warning\\nIf you use yarn or npm, you have to use other fields like `resolutions`.\\nFor detail, please check documentation of each package manager.\\n:::\\n\\nDefinition of `overrides` field is below in pnpm.\\n\\nThis field allows you to instruct pnpm to override any dependency in the dependency graph.\\nThis is useful to enforce all your packages to use a single version of a dependency, backport a fix, or replace a dependency with a fork.\\n\\nLiterally, you can override any packages you want to use specific version.\\n\\n## Solution\\n\\nAdd `overrides` field in package.json like below.\\n\\n```json\\n{\\n  \\"overrides\\": {\\n    \\"eslint-plugin-prettier\\": \\"5.0.1\\"\\n  }\\n}\\n```"},{"id":"first-blog-post","metadata":{"permalink":"/first-blog-post","source":"@site/blog/2024-03-23.md","title":"First Blog Post","description":"This is the first blog post on this site.","date":"2024-03-23T00:00:00.000Z","formattedDate":"March 23, 2024","tags":[{"label":"blog","permalink":"/tags/blog"},{"label":"programming","permalink":"/tags/programming"},{"label":"korean","permalink":"/tags/korean"},{"label":"software engineer","permalink":"/tags/software-engineer"}],"readingTime":0.165,"hasTruncateMarker":false,"authors":[{"name":"Sanghyeon Kim","title":"Software Engineer","url":"https://github.com/boh001","imageURL":"https://github.com/boh001.png","key":"sanghyeon"}],"frontMatter":{"slug":"first-blog-post","authors":"sanghyeon","title":"First Blog Post","description":"This is the first blog post on this site.","tags":["blog","programming","korean","software engineer"]},"unlisted":false,"prevItem":{"title":"How to fix error \\"Prettier resolveConfig.sync is not a function\\"","permalink":"/how-to-fix-error-prettier-resolveConfig-sync"}},"content":"Hello, everyone! This is the first blog post on this site.\\n\\nI\'m a software engineer, so i\'ll post about programming most of the time.\\nI hope this blog will be helpful to you."}]}')}}]);